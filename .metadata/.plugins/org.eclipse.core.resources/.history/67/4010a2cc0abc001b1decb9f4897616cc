package com.nielsonferreira.desafiodasaudemv.repositories.cnes;

import java.util.List;

import javax.persistence.EntityManager;
import javax.persistence.PersistenceContext;
import javax.persistence.TypedQuery;
import javax.persistence.criteria.CriteriaBuilder;
import javax.persistence.criteria.CriteriaQuery;
import javax.persistence.criteria.Predicate;
import javax.persistence.criteria.Root;

import com.nielsonferreira.desafiodasaudemv.models.Cnes;
import com.nielsonferreira.desafiodasaudemv.repositories.filters.CnesFilter;

public class CnesRepositoryImpl implements CnesRepositoryQuery {

	@PersistenceContext
	private EntityManager manager;

	@Override
	public List<Cnes> filtrar(CnesFilter cnesFilter) {

		CriteriaBuilder builder = manager.getCriteriaBuilder();
		CriteriaQuery<Cnes> criteria = builder.createQuery(Cnes.class);
		
		Root<Cnes> root = criteria.from(Cnes.class);
		
		/*
		 * Restrições
		 */
		Predicate[] predicates = criarRestricoes(cnesFilter, builder, root);
		criteria.where(predicates);
		
		TypedQuery<Cnes> query = manager.createQuery(criteria);
		
		System.out.println(query.getResultList().toArray());
		return query.getResultList();
	}

	private Predicate[] criarRestricoes(CnesFilter cnesFilter, CriteriaBuilder builder, Root<Cnes> root) {
		return null;
		
	}
}
